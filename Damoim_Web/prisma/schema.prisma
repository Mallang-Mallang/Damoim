// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Request {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  meeting      Meeting  @relation(fields: [meetingId], references: [id])
  meetingId    Int
  requestName  String
  requestEmail String
  confirm      Boolean  @default(false)
}

model Meeting {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  title       String
  category    Category
  location    String
  lat         Float
  lng         Float
  meetingDate String
  author      User      @relation(fields: [authorEmail], references: [email])
  authorEmail String
  requests    Request[]
}

enum Category {
  STUDY
  MOVIE
  RESTAURANT
  WALKING
  EXHIBITION
  MUSICAL
  SHOPPING
  TRAVELING
  SPORTS
  GAME
  KIDS
  OTHERS
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  refresh_token_expires_in Int?
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  meetings      Meeting[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
